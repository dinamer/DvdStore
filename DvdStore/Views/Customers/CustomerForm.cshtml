@model DvdStore.ViewModels.CustomerFormViewModel
@{
    ViewBag.Title = "CustomerForm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*Renderuje naslov u zavisnosti od toga za sta ce forma posluziti - edit ili create customer*@
@{ 
    string title;
    if (Model.Customer.Id == 0)
    {
        title = "Add customer";
    }
    else
    {
        title = "Edit customer";
    }


}
<h2>@title</h2>

@using (@Html.BeginForm("Save", "Customers"))
{
    @Html.ValidationSummary(true, "Please fix the following errors.")

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.BirthDate)
        @Html.TextBoxFor(m => m.Customer.BirthDate, "{0: dd.MM.yyyy }", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.BirthDate)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipTypeId)
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select membership type", new { @class = "form-control"} )
        @Html.ValidationMessageFor(m => m.Customer.MembershipTypeId)
    </div>

    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsLetter)
            @Html.LabelFor(m => m.Customer.IsSubscribedToNewsLetter)
            @Html.ValidationMessageFor(m => m.Customer.IsSubscribedToNewsLetter)
        </label>
    </div>

    @Html.HiddenFor(m => m.Customer.Id, new { @class = "form-control" })

    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Save</button>

}

@section scripts {
    
    @Scripts.Render("~/Scripts/jquery.validate");
    
}